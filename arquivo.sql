
-- USUARIO
CREATE TABLE Usuario (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100),
    username VARCHAR2(100) UNIQUE NOT NULL,
    senha VARCHAR2(100) NOT NULL,
    tipo_usuario VARCHAR2(20) CHECK (tipo_usuario IN ('admin', 'voluntario', 'profissional', 'atendido')),
    telefone VARCHAR2(20),
    id_endereco NUMBER,
    data_nascimento DATE,
    documento VARCHAR2(20),
    status NUMBER(1) CHECK (status IN (0, 1))
);

-- ENDERECO
CREATE TABLE Endereco (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    rua VARCHAR2(100),
    numero VARCHAR2(10),
    bairro VARCHAR2(50),
    cidade VARCHAR2(50),
    estado VARCHAR2(50),
    cep VARCHAR2(10),
    complemento VARCHAR2(100)
);

-- CATEGORIA
CREATE TABLE Categoria (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    descricao VARCHAR2(50)
);

-- ABRIGO
CREATE TABLE Abrigo (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    capacidade_total NUMBER,
    ocupacao_atual NUMBER,
    descricao CLOB
);

-- DOACAO
CREATE TABLE Doacao (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    id_abrigo NUMBER,
    descricao VARCHAR2(200),
    id_categoria NUMBER,
    quantidade NUMBER,
    CONSTRAINT fk_doacao_abrigo FOREIGN KEY (id_abrigo) REFERENCES Abrigo(id),
    CONSTRAINT fk_doacao_categoria FOREIGN KEY (id_categoria) REFERENCES Categoria(id)
);

-- PESSOA ATENDIDA
CREATE TABLE Pessoa_Atendida (
    id NUMBER PRIMARY KEY,
    categoria VARCHAR2(100),
    servico_desejado VARCHAR2(200),
    observacoes CLOB,
    CONSTRAINT fk_pessoaatendida_usuario FOREIGN KEY (id) REFERENCES Usuario(id)
);

-- DISTRIBUICAO
CREATE TABLE Distribuicao (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    doacao_id NUMBER,
    qtd_destinada NUMBER NOT NULL,
    data_destinada DATE DEFAULT SYSDATE,
    id_pessoa_atendida_fk NUMBER,
    CONSTRAINT fk_distribuicao_doacao FOREIGN KEY (doacao_id) REFERENCES Doacao(id),
    CONSTRAINT fk_distribuicao_pessoa FOREIGN KEY (id_pessoa_atendida_fk) REFERENCES Pessoa_Atendida(id)
);

-- VOLUNTARIO
CREATE TABLE Voluntario (
    id NUMBER PRIMARY KEY,
    categoria VARCHAR2(50),
    disponibilidade VARCHAR2(50),
    CONSTRAINT fk_voluntario_usuario FOREIGN KEY (id) REFERENCES Usuario(id)
);

-- EMPRESA PARCEIRA
CREATE TABLE EmpresaParceira (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    categoria VARCHAR2(100),
    servico_oferecido VARCHAR2(200),
    CONSTRAINT fk_empresa_usuario FOREIGN KEY (id) REFERENCES Usuario(id)
);

-- ESPECIALIDADE
CREATE TABLE Especialidade (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    descricao VARCHAR2(100)
);

-- FEEDBACK
CREATE TABLE Feedback (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nota NUMBER,
    comentario CLOB,
    data_feedback DATE DEFAULT SYSDATE
);

-- PROFISSIONAL SAUDE
CREATE TABLE ProfissionalSaude (
    id NUMBER PRIMARY KEY,
    id_especialidade NUMBER,
    forma_atendimento VARCHAR2(50),
    id_feedback NUMBER,
    CONSTRAINT fk_profissional_usuario FOREIGN KEY (id) REFERENCES Usuario(id),
    CONSTRAINT fk_profissional_especialidade FOREIGN KEY (id_especialidade) REFERENCES Especialidade(id),
    CONSTRAINT fk_profissional_feedback FOREIGN KEY (id_feedback) REFERENCES Feedback(id)
);

-- MURAL EMERGENCIA
CREATE TABLE Mural_Emergencia (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    mensagem CLOB,
    tipo VARCHAR2(50),
    status VARCHAR2(50),
    data_hora TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- REGISTRO EVENTO
CREATE TABLE RegistroEvento (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    tipo_evento VARCHAR2(100),
    descricao VARCHAR2(200),
    data_hora TIMESTAMP DEFAULT SYSTIMESTAMP,
    id_usuario NUMBER,
    localizacao VARCHAR2(200),
    dados_json CLOB,
    CONSTRAINT fk_evento_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id)
);
